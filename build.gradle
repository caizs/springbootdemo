buildscript {
    ext{
        springBootVersion       = '1.5.9.RELEASE'
        springSessionVersion    = '1.3.0.RELEASE'
        propdepsVersion         = '0.0.7'
        springVersion           = '4.3.4.RELEASE'
    }
    repositories {
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/plugins-release' }
        
        maven { url "${nexusUrl}/content/groups/public" }
        jcenter()
        mavenCentral()
    }
    
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.springframework.build.gradle:propdeps-plugin:${propdepsVersion}"
    }
}

allprojects {
    group "com.lianfan"
    version "${projectVersion}"

    apply plugin: "eclipse-wtp"
    apply plugin: "eclipse"
    apply plugin: "idea"
    
    apply plugin: 'org.springframework.boot'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
    
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    
    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    configurations.all {
 
    }
    
    repositories {
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/plugins-release' }
        
        maven { url "${nexusUrl}/content/groups/public" }
        jcenter()
        mavenCentral()
    }
    

}

ext.libraries = [        

    spring_boot_starter_web          : "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
    spring_boot_starter_thymeleaf    : "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}",
    spring_boot_devtools             : "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
    spring_boot_redis                : "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",              
    spring_boot_starter_test         : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
    spring_boot_cache                : "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}",
    springBootStarterTomcat    : "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}",

    spring_boot_gradle_plugin        : "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" ,
    propdeps_plugin                  : "org.springframework.build.gradle:propdeps-plugin:${propdepsVersion}",
    spring_session                   : "org.springframework.session:spring-session:${springSessionVersion}",
    spring_aspectj                   : "org.springframework:spring-aspects:${springVersion}",
    
    commonIo           : "commons-io:commons-io:2.4",
    commonCodec        : "commons-codec:commons-codec:1.10",
    commonUpload       : "commons-fileupload:commons-fileupload:1.3.1",
    commonNet          : "commons-net:commons-net:3.4",
    commonBeanUtils    : "commons-beanutils:commons-beanutils:1.8.3",
    commonLang         : "org.apache.commons:commons-lang3:3.4",
    
    druid              : "com.alibaba:druid:1.1.2",
    mysql_connector    : "mysql:mysql-connector-java:5.1.40",
    mybatis_boot       : "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1",
    pagehelper         : "com.github.pagehelper:pagehelper:4.1.6",
    
    swagger2           : "io.springfox:springfox-swagger2:2.2.2",
    swagger2_ui        : "io.springfox:springfox-swagger-ui:2.2.2",
 
    guava              : "com.google.guava:guava:19.0",
    
    joda               : "joda-time:joda-time:2.8.2",
    
    redis_pool         : "org.apache.commons:commons-pool2:2.4.2",
    
    common_collection  : "org.apache.commons:commons-collections4:4.0",
    lombok             : 'org.projectlombok:lombok:1.16.16',
    elastic_job_core       : 'com.dangdang:elastic-job-lite-core:2.1.5',
    elastic_job_spring       : 'com.dangdang:elastic-job-lite-spring:2.1.5',
    sharding_jdbc      : 'io.shardingjdbc:sharding-jdbc-core:2.0.0.M3',

    springboot_admin  : 'de.codecentric:spring-boot-admin-starter-client:1.5.4',
    mybatis_plus      : 'com.baomidou:mybatis-plus:2.1.8',

    fastjson          : 'com.alibaba:fastjson:1.2.36',
    caffeine          : 'com.github.ben-manes.caffeine:caffeine:2.3.5',
    essentials4j      : 'org.essentials4j:essentials4j:1.0.0',

    jwt               : 'io.jsonwebtoken:jjwt:0.9.0'
]


subprojects {
    dependencies {

        compile         libraries.spring_boot_starter_web
        compile         libraries.spring_boot_starter_thymeleaf
        compile         libraries.spring_boot_gradle_plugin
        compile         libraries.spring_boot_redis
        compile         libraries.spring_boot_cache
        compile         libraries.spring_session
        compile         libraries.propdeps_plugin
        compile         libraries.spring_aspectj
        compile libraries.springBootStarterTomcat

        compile         libraries.commonLang
        compile         libraries.commonCodec
        compile         libraries.commonUpload
        compile         libraries.commonNet
        compile         libraries.commonBeanUtils
        compile         libraries.commonIo
        compile         libraries.common_collection

        compile         libraries.druid
        compile         libraries.mysql_connector
        compile         libraries.mybatis_boot
        compile         libraries.mybatis_plus
        compile         libraries.pagehelper

        compile         libraries.guava

        compile         libraries.swagger2
        compile         libraries.swagger2_ui

        compile         libraries.joda

        compile         libraries.redis_pool

        testCompile     libraries.spring_boot_starter_test

        compile        libraries.spring_boot_devtools

        compile         libraries.lombok
        compile         libraries.elastic_job_core
        compile         libraries.elastic_job_spring
        compile         libraries.sharding_jdbc
        compile         libraries.springboot_admin
        compile         libraries.fastjson
        compile         libraries.caffeine
        compile         libraries.essentials4j
        compile         libraries.jwt
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


test {
    ignoreFailures = true
    if (project.hasProperty('profile')) {
        systemProperty 'test.db', "$profile"
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar
        }
    }

}

eclipseJdt << {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=utf-8')
}

task initDir << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

sourceSets {
    main.java.srcDirs = ['src/main/java']
    main.resources.srcDirs = ['src/main/resources', 'src/main/java']
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}


